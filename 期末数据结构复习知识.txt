1.算法复杂度分析-时间复杂度（最接近的）
题，书上的练习

2.list
-》顺序存储 增删改查 时间复杂度 (空间复杂度)
-》链式存储 增删改查 时间复杂度 （单链表、双链表、循环链表、插入和删除、熟练掌握）

3.栈
-》数组
-》线性表
如何判断栈满、栈空、入栈指针标记改变、出栈指针标记改变
链式（有头结点）的插入（没有头结点）
（1）括号匹配、倒序、中缀表达式、清楚理解

4.队列
-》数组表示 （先进先出）（循环队列，空一个元素区分队列满和队列空，对于循环队列，如何判断队列空还是队列满；取余-》判断这个队列中有多少个元素）
-》链式 （出队、进队、两个指针）

5.字符串
KMP算法，求next值（知识点）

6.树
-》三个遍历（递归算法和非递归算法都会写）
（每种序的特点和 不同）
（二分法和二叉树的对应，二分法的递归算法和非递归算法熟练掌握、完全二叉树的定义性质）
-》满二叉树性质
-》完全二叉树性质
-》父节点和子节点公示、N2N0的关系
-》二叉树的平衡性问题（二叉搜索树），平均查找程度（Binary search tree） 熟练掌握，平衡二叉树怎么去平衡（左旋、右旋、熟练掌握）
》霍夫曼树（权值最小，WPL最小建立霍夫曼树，它的建立和方法，计算）
-》【二叉树增加一个元素和删除一个元素保持中序遍历的顺序不变】（熟练掌握)
-》二叉树、普通树、树、森林这之间的互相转换（熟练掌握）
-》为了提高查找速度，建立二叉查找树【重点】

7.图
-》遍历（深搜和广搜，熟练掌握，非递归遍历，利用堆栈，广搜利用队列，时间复杂度和空间复杂度）
-》应用
1.生成树（顶点和边的关系）
2.最小代价的生成树（边上有权值，两种算法，Prime(加点，边的权值最小)，Kru-（加权值最小的边），不要形成环）
3.拓扑排序（给图，找出拓扑排序的序列）
4..关键路径AOE（会画）

8.查找
-》二叉查找树（建立、定义、平衡、平均复杂度、最坏复杂度、插入和删除、重点的重点）
-》哈希函数（简单质数取余（20->19），冲突解决策略，衡量哈希表是否优秀，ASL的计算）

9.排序
bubble select search
时间复杂度
空间复杂度
是否稳定

【简单要记，重要性也要记】

改进算法（shell 选择，间隔，组成，选择质数）
Quick （重点），熟练掌握（算法掌握），时间复杂度，空间复杂度，稳定性，退化，性能好
选择排序（算法）
堆排序（算法、空间复杂度、时间复杂度、稳定性）

Merge sort时间复杂度，空间复杂度，稳定性